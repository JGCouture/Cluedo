{"ast":null,"code":"var _jsxFileName = \"/Users/albert/react-practice/front-end/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Board.css\";\nimport React, { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport scarlet from \"../images/scarlet.PNG\";\nimport green from \"../images/green.PNG\";\nimport mustard from \"../images/mustard.PNG\";\nimport white from \"../images/white.PNG\";\nimport plum from \"../images/plum.PNG\";\nimport peacock from \"../images/peacock.PNG\";\nimport board2 from \"../images/board-bgbg.png\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000');\n\n// export default function Board(props) {\n\n//     // const room = useRef(\"\");\n//     // const count1 = useRef(0);\n//     // const count2 = useRef(0);\n\n//     const characterRef = useRef(null);\n\n//     //Track the current location of the character\n//     const location_index = useRef();\n\n//     //Capture the selected character \n//     const { state: character_from_selection } = useLocation();\n\n//     useEffect(() => {\n\n//         if (character_from_selection) {\n//             let rooms = [\"study11\", \"hall13\", \"lounge15\", \"library31\", \"billiard33\", \"dinning35\", \"conservatory51\", \"ballroom53\", \"kitchen55\"];\n\n//             //Initialize the character's room \n//             const room_position_index = Math.floor(Math.random() * rooms.length);\n//             const room_position = rooms[room_position_index];\n\n//             location_index.current = parseInt(room_position.substring(room_position.length - 2));\n\n//             //Get the source of the character image \n//             let img_src;\n//             [scarlet, green, mustard, white, plum, peacock].forEach((el) => {\n//                 if (el.includes(character_from_selection.character)) {\n//                     img_src = el;\n//                 }\n//             });\n\n//             const img = document.createElement(\"img\");\n//             img.src = img_src;\n//             img.style.height = \"50%\";\n//             img.style.width = \"50%\";\n//             img.alt = character_from_selection.character;\n//             img.id = character_from_selection.character;\n//             img.onclick = character_selected;\n\n//             document.getElementById(room_position).appendChild(img);\n\n//             //socket the character on the map\n//             socket.emit(\"character_map\", {\"on_map\":[room_position, character_from_selection.character, img.src]});\n\n//         }\n\n//     }, [character_from_selection]);\n\n//    // Socket receive the character on the map\n//     useEffect(() => {\n\n//         socket.on(\"receive_map\", (data) => {\n\n//                 const img = document.createElement(\"img\");\n//                 img.src = data.on_map[2];\n//                 img.style.height = \"50%\";\n//                 img.style.width = \"50%\";\n//                 img.alt = data.on_map[1];\n//                 img.id = data.on_map[1];\n//                 img.onclick = character_selected;\n\n//                 document.getElementById(data.on_map[0]).appendChild(img);\n\n//            ;\n\n//         })\n//     }, []);\n\n//     function character_selected(event) {\n//         // Logic to handle the selection of the character\n//         // For example, you can change the border color of the selected character\n//         if (event.target.style.border === \"2px solid red\"){\n//             event.target.style.border = \"\";\n//             characterRef.current = \"\";\n\n//         }else{\n//             event.target.style.border = \"2px solid red\";      \n//             // Store the reference to the selected character\n//             characterRef.current = event.target;\n//         }\n\n//     }\n\n//     function character_movement(event) {\n\n//         if (characterRef.current) {\n//             const next_location = document.getElementById(event.target.id);\n//                 const next_index = parseInt(event.target.id.substring(event.target.id.length - 2));\n\n//                 //Only allow vertical or horizontal movement by one step each time\n//                 if ([location_index.current + 1, location_index.current - 1, location_index.current + 10, location_index.current - 10].includes(next_index)) {\n\n//                     next_location.appendChild(characterRef.current);\n//                     location_index.current = next_index;\n\n//                     socket.emit(\"send_move\", {\"message_move\":[next_location.id,characterRef.current.src, characterRef.current.id]});\n\n//                 }\n//         }\n//     }\n\n//     useEffect(() => {\n//         socket.on(\"receive_move\", (data) => {\n\n//             document.getElementById(data.message_move[2]).remove();\n\n//             const img = document.createElement(\"img\");\n//             img.src = data.message_move[1];\n//             img.style.height = \"50%\";\n//             img.style.width = \"50%\";\n//             img.alt = data.message_move[2];\n//             img.id = data.message_move[2];\n\n//             const next_location = document.getElementById(data.message_move[0]);\n\n//             next_location.appendChild(img);\n\n//         });\n\n//     }, []);\n\n//     return (\n//         <div className=\"container-fluid\">\n//             <div className=\"row\">\n//                 <div className=\"board-bg left-box col-8 d-flex justify-content-center align-items-center shadow-lg\">\n//                     <div className=\"game-board\">\n//                         <div className=\"row ms-2\">\n//                             <div className=\"col study\" id=\"study11\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway12\" onClick={character_movement}></div>\n//                             <div className=\"col hall\" id=\"hall13\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway14\" onClick={character_movement}></div>\n//                             <div className=\"col lounge\" id=\"lounge15\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-2\">\n//                             <div className=\"col hallway-vertical\" id=\"hallway21\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway23\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway25\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col library\" id=\"library31\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway32\" onClick={character_movement}></div>\n//                             <div className=\"col billiard\" id =\"billiard33\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway34\" onClick={character_movement}></div>\n//                             <div className=\"col dinning\" id=\"dinning35\" onClick={character_movement}></div>\n\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col hallway-vertical\" id=\"hallway41\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway43\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway45\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col conservatory\" id=\"conservatory51\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway52\" onClick={character_movement}></div>\n//                             <div className=\"col ballroom\" id=\"ballroom53\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway54\" onClick={character_movement}></div>\n//                             <div className=\"col kitchen\" id=\"kitchen55\" onClick={character_movement}></div>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"col-4\">\n\n//                     <div className=\"note-table shadow-lg\">\n//                         <table className=\"table ms-2\">\n//                             <tbody>\n//                                 <tr className=\"text-success\">WHO DO IT?</tr>\n//                                 {[\"scarlet\", \"mustard\", \"plum\", \"green\", \"white\", \"peacock\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n\n//                                     ))}\n//                                 </tr>\n//                                 ))}\n\n//                                 <tr className=\"text-danger\">WITH WHAT</tr>\n//                                 {[\"rope\", \"wrench\", \"candlestick\", \"revolver\", \"lead_pipe\", \"dagger\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n//                                     ))}\n//                                 </tr>\n//                                 ))}\n\n//                                 <tr className=\"text-info\">WHERE DO IT?</tr>\n//                                 {[\"studyT\", \"hallT\", \"loungeT\", \"libraryT\", \"billiardT\", \"dinningT\", \"conservatoryT\", \"ballroomT\", \"kitchenT\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character.substring(0,character.length-1)}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n//                                     ))}\n//                                 </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     </div>\n\n//                 </div>\n\n//             </div>\n//         </div>\n\n//     );\n// }\n\nexport default function Board(props) {\n  _s();\n  const {\n    state: character_from_selection\n  } = useLocation();\n  useEffect(() => {\n    let img_src;\n    [scarlet, green, mustard, white, plum, peacock].forEach(el => {\n      if (el.includes(character_from_selection.character)) {\n        img_src = el;\n      }\n    });\n    const img = document.createElement(\"img\");\n    img.src = img_src;\n    img.style.height = \"50%\";\n    img.style.width = \"50%\";\n    img.alt = character_from_selection.character;\n    img.id = character_from_selection.character;\n    // img.onclick = character_selected;\n\n    document.getElementById(\"clue-board\").appendChild(img);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 shadow-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 shadow-sm\",\n        children: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"+6ACc+n2K1hNsCa4WQeEhWEofRQ=\", false, function () {\n  return [useLocation];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","useLocation","scarlet","green","mustard","white","plum","peacock","board2","io","jsxDEV","_jsxDEV","socket","connect","Board","props","_s","state","character_from_selection","img_src","forEach","el","includes","character","img","document","createElement","src","style","height","width","alt","id","getElementById","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/albert/react-practice/front-end/src/components/Board.js"],"sourcesContent":["import \"../styles/Board.css\";\nimport React, { useEffect, useRef} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport scarlet from \"../images/scarlet.PNG\";\nimport green from \"../images/green.PNG\";\nimport mustard from \"../images/mustard.PNG\";\nimport white from \"../images/white.PNG\";\nimport plum from \"../images/plum.PNG\";\nimport peacock from \"../images/peacock.PNG\";\nimport board2 from \"../images/board-bgbg.png\";\n\nimport io from 'socket.io-client'\nconst socket = io.connect('http://localhost:4000');\n\n\n// export default function Board(props) {\n\n//     // const room = useRef(\"\");\n//     // const count1 = useRef(0);\n//     // const count2 = useRef(0);\n    \n//     const characterRef = useRef(null);\n\n//     //Track the current location of the character\n//     const location_index = useRef();\n    \n//     //Capture the selected character \n//     const { state: character_from_selection } = useLocation();\n\n\n//     useEffect(() => {\n\n//         if (character_from_selection) {\n//             let rooms = [\"study11\", \"hall13\", \"lounge15\", \"library31\", \"billiard33\", \"dinning35\", \"conservatory51\", \"ballroom53\", \"kitchen55\"];\n    \n//             //Initialize the character's room \n//             const room_position_index = Math.floor(Math.random() * rooms.length);\n//             const room_position = rooms[room_position_index];\n\n//             location_index.current = parseInt(room_position.substring(room_position.length - 2));\n    \n//             //Get the source of the character image \n//             let img_src;\n//             [scarlet, green, mustard, white, plum, peacock].forEach((el) => {\n//                 if (el.includes(character_from_selection.character)) {\n//                     img_src = el;\n//                 }\n//             });\n    \n//             const img = document.createElement(\"img\");\n//             img.src = img_src;\n//             img.style.height = \"50%\";\n//             img.style.width = \"50%\";\n//             img.alt = character_from_selection.character;\n//             img.id = character_from_selection.character;\n//             img.onclick = character_selected;\n\n//             document.getElementById(room_position).appendChild(img);\n\n//             //socket the character on the map\n//             socket.emit(\"character_map\", {\"on_map\":[room_position, character_from_selection.character, img.src]});\n\n      \n\n//         }\n        \n//     }, [character_from_selection]);\n    \n\n//    // Socket receive the character on the map\n//     useEffect(() => {\n\n//         socket.on(\"receive_map\", (data) => {\n\n//                 const img = document.createElement(\"img\");\n//                 img.src = data.on_map[2];\n//                 img.style.height = \"50%\";\n//                 img.style.width = \"50%\";\n//                 img.alt = data.on_map[1];\n//                 img.id = data.on_map[1];\n//                 img.onclick = character_selected;\n    \n//                 document.getElementById(data.on_map[0]).appendChild(img);\n\n          \n//            ;\n\n//         })\n//     }, []);\n    \n    \n//     function character_selected(event) {\n//         // Logic to handle the selection of the character\n//         // For example, you can change the border color of the selected character\n//         if (event.target.style.border === \"2px solid red\"){\n//             event.target.style.border = \"\";\n//             characterRef.current = \"\";\n\n//         }else{\n//             event.target.style.border = \"2px solid red\";      \n//             // Store the reference to the selected character\n//             characterRef.current = event.target;\n//         }\n  \n//     }\n\n    \n//     function character_movement(event) {\n\n//         if (characterRef.current) {\n//             const next_location = document.getElementById(event.target.id);\n//                 const next_index = parseInt(event.target.id.substring(event.target.id.length - 2));\n\n//                 //Only allow vertical or horizontal movement by one step each time\n//                 if ([location_index.current + 1, location_index.current - 1, location_index.current + 10, location_index.current - 10].includes(next_index)) {\n\n//                     next_location.appendChild(characterRef.current);\n//                     location_index.current = next_index;\n\n//                     socket.emit(\"send_move\", {\"message_move\":[next_location.id,characterRef.current.src, characterRef.current.id]});\n                    \n//                 }\n//         }\n//     }\n\n//     useEffect(() => {\n//         socket.on(\"receive_move\", (data) => {\n\n//             document.getElementById(data.message_move[2]).remove();\n\n//             const img = document.createElement(\"img\");\n//             img.src = data.message_move[1];\n//             img.style.height = \"50%\";\n//             img.style.width = \"50%\";\n//             img.alt = data.message_move[2];\n//             img.id = data.message_move[2];\n\n//             const next_location = document.getElementById(data.message_move[0]);\n               \n//             next_location.appendChild(img);\n    \n           \n//         });\n    \n//     }, []);\n    \n      \n    \n    \n  \n//     return (\n//         <div className=\"container-fluid\">\n//             <div className=\"row\">\n//                 <div className=\"board-bg left-box col-8 d-flex justify-content-center align-items-center shadow-lg\">\n//                     <div className=\"game-board\">\n//                         <div className=\"row ms-2\">\n//                             <div className=\"col study\" id=\"study11\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway12\" onClick={character_movement}></div>\n//                             <div className=\"col hall\" id=\"hall13\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway14\" onClick={character_movement}></div>\n//                             <div className=\"col lounge\" id=\"lounge15\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-2\">\n//                             <div className=\"col hallway-vertical\" id=\"hallway21\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway23\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway25\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col library\" id=\"library31\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway32\" onClick={character_movement}></div>\n//                             <div className=\"col billiard\" id =\"billiard33\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway34\" onClick={character_movement}></div>\n//                             <div className=\"col dinning\" id=\"dinning35\" onClick={character_movement}></div>\n\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col hallway-vertical\" id=\"hallway41\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway43\" onClick={character_movement}></div>\n//                             <div className=\"col\"></div>\n//                             <div className=\"col hallway-vertical\" id=\"hallway45\" onClick={character_movement}></div>\n//                         </div>\n\n//                         <div className=\"row ms-1\">\n//                             <div className=\"col conservatory\" id=\"conservatory51\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway52\" onClick={character_movement}></div>\n//                             <div className=\"col ballroom\" id=\"ballroom53\" onClick={character_movement}></div>\n//                             <div className=\"col hallway\" id=\"hallway54\" onClick={character_movement}></div>\n//                             <div className=\"col kitchen\" id=\"kitchen55\" onClick={character_movement}></div>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"col-4\">\n                   \n//                     <div className=\"note-table shadow-lg\">\n//                         <table className=\"table ms-2\">\n//                             <tbody>\n//                                 <tr className=\"text-success\">WHO DO IT?</tr>\n//                                 {[\"scarlet\", \"mustard\", \"plum\", \"green\", \"white\", \"peacock\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n                                    \n//                                     ))}\n//                                 </tr>\n//                                 ))}\n\n//                                 <tr className=\"text-danger\">WITH WHAT</tr>\n//                                 {[\"rope\", \"wrench\", \"candlestick\", \"revolver\", \"lead_pipe\", \"dagger\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n//                                     ))}\n//                                 </tr>\n//                                 ))}\n\n//                                 <tr className=\"text-info\">WHERE DO IT?</tr>\n//                                 {[\"studyT\", \"hallT\", \"loungeT\", \"libraryT\", \"billiardT\", \"dinningT\", \"conservatoryT\", \"ballroomT\", \"kitchenT\"].map((character, index) => (\n//                                 <tr key={index}>\n//                                     <th className={`row ${character}`} scope=\"row\">{character.substring(0,character.length-1)}</th>\n//                                     {[...Array(5)].map((_, j) => (\n//                                     <td className=\"col\" key={j}>\n//                                         <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\"/>\n//                                     </td>\n//                                     ))}\n//                                 </tr>\n//                                 ))}\n//                             </tbody>\n//                         </table>\n//                     </div>\n\n//                 </div>\n\n\n                \n//             </div>\n//         </div>\n        \n//     );\n// }\n\n\nexport default function Board(props) {\n\n    const { state: character_from_selection } = useLocation();\n\n    useEffect(()=>{\n\n        let img_src;\n        [scarlet, green, mustard, white, plum, peacock].forEach((el) => {\n            if (el.includes(character_from_selection.character)) {\n                img_src = el;\n            }\n        });\n\n        const img = document.createElement(\"img\");\n        img.src = img_src;\n        img.style.height = \"50%\";\n        img.style.width = \"50%\";\n        img.alt = character_from_selection.character;\n        img.id = character_from_selection.character;\n        // img.onclick = character_selected;\n\n        document.getElementById(\"clue-board\").appendChild(img);\n    }, [])\n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"board row\">\n                <div className=\"col-8 shadow-sm\">\n                </div>\n                <div className=\"col-4 shadow-sm\">note</div>\n            </div>\n        </div>\n    )\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}