{"ast":null,"code":"var _jsxFileName = \"/Users/albert/react-practice/front-end/src/components/Board.js\";\nimport \"../styles/Board.css\";\n// import study from \"../images/study.png\"\n// import hall from \"..//images/hall.png\"\n// import lounge from \"..//images/lounge.png\"\n// import library from \"..//images/library.png\"\n// import billiard from \"..//images/billiard.png\"\n// import dinning from \"..//images/dinning.png\"\n// import conservatory from \"..//images/conservatory.png\"\n// import ballroom from \"..//images/ballroom.png\"\n// import kitchen from \"..//images/kitchen.png\"\nimport React from 'react'; // Import React\nimport scarlet from \"../images/scarlet.PNG\"; // Import the image URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  function getPosition(event) {\n    // Get the x and y coordinates of the click relative to the container\n    const x = event.nativeEvent.offsetX;\n    const y = event.nativeEvent.offsetY;\n\n    // Log or use the x and y coordinates as needed\n    alert(`X: ${x}, Y: ${y}`);\n  }\n  function initializedCharacters() {\n    const locations = {\n      study: [[60, 230], [40, 150]],\n      hall: [[80, 460], [50, 252]],\n      lounge: [[540, 769], [44, 210]],\n      library: [[4, 200], [223, 372]],\n      billiard: [[0, 200], [402, 551]],\n      dinning: [[530, 769], [316, 490]],\n      conservatory: [[40, 197], [610, 770]],\n      ballroom: [[262, 509], [553, 729]],\n      kitchen: [[571, 767], [583, 772]]\n    };\n    const randomIndex = Math.floor(Math.random() * Object.keys(locations).length); // Generate a random index\n    const randomRoom = Object.keys(locations)[randomIndex]; // Get a random room name\n\n    // Generate random x and y coordinates within the range of the selected room\n    const x = Math.floor(Math.random() * (locations[randomRoom][0][1] - locations[randomRoom][0][0]) + locations[randomRoom][0][0]);\n    const y = Math.floor(Math.random() * (locations[randomRoom][1][1] - locations[randomRoom][1][0]) + locations[randomRoom][1][0]);\n\n    // Return the JSX for the initialized character image\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: scarlet // Set the source of the image\n      ,\n      alt: \"character\" // Set the alt text\n      ,\n      style: {\n        position: 'absolute',\n        // Set the position to absolute\n        left: `${x}px`,\n        // Set the left position based on x\n        top: `${y}px`,\n        // Set the top position based on y\n        height: '80px',\n        width: '80px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row vh-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board col-7 p-4 p-md-5 mb-4 rounded bg-body-secondary shadow-sm\",\n        onClick: getPosition,\n        children: [initializedCharacters(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5 d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vh-70 rounded shadow-sm mb-2\",\n          children: \"election\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vh-30 rounded shadow-sm\",\n          children: \"chat box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","scarlet","jsxDEV","_jsxDEV","Board","getPosition","event","x","nativeEvent","offsetX","y","offsetY","alert","initializedCharacters","locations","study","hall","lounge","library","billiard","dinning","conservatory","ballroom","kitchen","randomIndex","Math","floor","random","Object","keys","length","randomRoom","src","alt","style","position","left","top","height","width","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/albert/react-practice/front-end/src/components/Board.js"],"sourcesContent":["import \"../styles/Board.css\"\n// import study from \"../images/study.png\"\n// import hall from \"..//images/hall.png\"\n// import lounge from \"..//images/lounge.png\"\n// import library from \"..//images/library.png\"\n// import billiard from \"..//images/billiard.png\"\n// import dinning from \"..//images/dinning.png\"\n// import conservatory from \"..//images/conservatory.png\"\n// import ballroom from \"..//images/ballroom.png\"\n// import kitchen from \"..//images/kitchen.png\"\nimport React from 'react'; // Import React\nimport scarlet from \"../images/scarlet.PNG\"; // Import the image URL\n\nexport default function Board() {\n    \n    function getPosition(event){\n        // Get the x and y coordinates of the click relative to the container\n        const x = event.nativeEvent.offsetX;\n        const y = event.nativeEvent.offsetY;\n        \n        // Log or use the x and y coordinates as needed\n        alert(`X: ${x}, Y: ${y}`);\n    }\n\n    function initializedCharacters() {\n                \n        const locations = {\n            study: [[60, 230], [40, 150]],\n            hall: [[80, 460], [50, 252]],\n            lounge: [[540, 769], [44, 210]],\n            library: [[4, 200], [223, 372]],\n            billiard: [[0, 200], [402, 551]],\n            dinning: [[530, 769], [316, 490]],\n            conservatory: [[40, 197], [610, 770]],\n            ballroom: [[262, 509], [553, 729]],\n            kitchen: [[571, 767], [583, 772]]\n        };\n        \n        const randomIndex = Math.floor(Math.random() * Object.keys(locations).length); // Generate a random index\n        const randomRoom = Object.keys(locations)[randomIndex]; // Get a random room name\n    \n        // Generate random x and y coordinates within the range of the selected room\n        const x = Math.floor(Math.random() * (locations[randomRoom][0][1] - locations[randomRoom][0][0]) + locations[randomRoom][0][0]);\n        const y = Math.floor(Math.random() * (locations[randomRoom][1][1] - locations[randomRoom][1][0]) + locations[randomRoom][1][0]);\n    \n    \n        // Return the JSX for the initialized character image\n        return (\n            <img \n                src={scarlet} // Set the source of the image\n                alt=\"character\" // Set the alt text\n                style={{\n                    position: 'absolute', // Set the position to absolute\n                    left: `${x}px`, // Set the left position based on x\n                    top: `${y}px`, // Set the top position based on y\n                    height:'80px',\n                    width:'80px',\n                }}\n            />\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row vh-100\">\n                <div className=\"board col-7 p-4 p-md-5 mb-4 rounded bg-body-secondary shadow-sm\" onClick={getPosition}>\n        \n\n                    {initializedCharacters()} {/* Call initializedCharacters function */}\n                </div>\n                <div className=\"col-5 d-flex flex-column\">\n                    <div className=\"vh-70 rounded shadow-sm mb-2\">election</div>\n                    <div className=\"vh-30 rounded shadow-sm\">chat box</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}